Assembly {
    name: "Test",
    type_defs: {
        "Test.GenericTest`2": Class(
            ClassDef {
                parent: Some(
                    Single {
                        assem: "!",
                        ty: "System.Object",
                    },
                ),
                type_vars: {
                    "@T": GenericBinding {
                        implemented_interfaces: [],
                        parent: Some(
                            Single {
                                assem: "!",
                                ty: "System.Object",
                            },
                        ),
                    },
                    "@U": GenericBinding {
                        implemented_interfaces: [],
                        parent: Some(
                            WithGeneric {
                                assem: "!",
                                ty: "System.Array`1",
                                type_vars: {
                                    "@T": Generic(
                                        "@T",
                                    ),
                                },
                            },
                        ),
                    },
                },
                attr: TypeAttr {
                    vis: Public,
                    specific: Class(
                        BitFlags<ClassImplementationFlags> {
                            bits: 0b0,
                        },
                    ),
                },
                name: "Test.GenericTest`2",
                methods: {
                    ".ctor()": Method {
                        name: ".ctor()",
                        attr: MethodAttr {
                            vis: Public,
                            impl_flags: BitFlags<MethodImplementationFlags> {
                                bits: 0b0,
                            },
                            register_len: 0,
                        },
                        instructions: [
                            LoadTrue {
                                register_addr: 0,
                            },
                            SetField {
                                register_addr: 0,
                                field: "__a",
                            },
                            NewObject {
                                ty: WithGeneric {
                                    assem: "!",
                                    ty: "System.Array`1",
                                    type_vars: {
                                        "@T": Single {
                                            assem: "!",
                                            ty: "System.Boolean",
                                        },
                                    },
                                },
                                ctor_name: ".ctor()",
                                args: [],
                                register_addr: 1,
                            },
                        ],
                        ret_type: Single {
                            assem: "!",
                            ty: "System.Void",
                        },
                        args: [],
                        type_vars: {},
                    },
                    "GenericMethod`1(@Z)": Method {
                        name: "GenericMethod`1(@Z)",
                        attr: MethodAttr {
                            vis: Public,
                            impl_flags: BitFlags<MethodImplementationFlags> {
                                bits: 0b0,
                            },
                            register_len: 0,
                        },
                        instructions: [
                            LoadArg {
                                register_addr: 0,
                                arg: 0,
                            },
                            StaticCall {
                                ty: Single {
                                    assem: "!",
                                    ty: "System.Console",
                                },
                                method: Single(
                                    "WriteLine([!]System.String)",
                                ),
                                args: [
                                    0,
                                ],
                                ret_at: 1,
                            },
                        ],
                        ret_type: Single {
                            assem: "!",
                            ty: "System.Void",
                        },
                        args: [
                            Generic(
                                "@Z",
                            ),
                        ],
                        type_vars: {
                            "@Z": GenericBinding {
                                implemented_interfaces: [],
                                parent: Some(
                                    Single {
                                        assem: "!",
                                        ty: "System.Object",
                                    },
                                ),
                            },
                        },
                    },
                },
                fields: {
                    "__object_array": Field {
                        name: "__object_array",
                        attr: FieldAttr {
                            vis: Private,
                            impl_flags: BitFlags<FieldImplementationFlags> {
                                bits: 0b0,
                            },
                        },
                        ty: WithGeneric {
                            assem: "!",
                            ty: "System.Array`1",
                            type_vars: {
                                "@T": Single {
                                    assem: "!",
                                    ty: "System.Boolean",
                                },
                            },
                        },
                    },
                    "__a": Field {
                        name: "__a",
                        attr: FieldAttr {
                            vis: AssemblyOnly,
                            impl_flags: BitFlags<FieldImplementationFlags> {
                                bits: 0b0,
                            },
                        },
                        ty: Generic(
                            "@T",
                        ),
                    },
                },
            },
        ),
        "Test.StaticTest": Class(
            ClassDef {
                parent: Some(
                    Single {
                        assem: "!",
                        ty: "System.Object",
                    },
                ),
                type_vars: {},
                attr: TypeAttr {
                    vis: Public,
                    specific: Class(
                        BitFlags<ClassImplementationFlags> {
                            bits: 0b1,
                            flags: Static,
                        },
                    ),
                },
                name: "Test.StaticTest",
                methods: {
                    ".sctor()": Method {
                        name: ".sctor()",
                        attr: MethodAttr {
                            vis: Public,
                            impl_flags: BitFlags<MethodImplementationFlags> {
                                bits: 0b1,
                                flags: Static,
                            },
                            register_len: 0,
                        },
                        instructions: [
                            Load_u64 {
                                register_addr: 0,
                                val: 10,
                            },
                            InstanceCall {
                                val: 0,
                                method: Single(
                                    "ToString()",
                                ),
                                args: [],
                                ret_at: 1,
                            },
                            SetField {
                                register_addr: 1,
                                field: "__test",
                            },
                        ],
                        ret_type: Single {
                            assem: "!",
                            ty: "System.Void",
                        },
                        args: [],
                        type_vars: {},
                    },
                    "Main([!]System.Array`1[@T:[!]System.String])": Method {
                        name: "Main([!]System.Array`1[@T:[!]System.String])",
                        attr: MethodAttr {
                            vis: Public,
                            impl_flags: BitFlags<MethodImplementationFlags> {
                                bits: 0b1,
                                flags: Static,
                            },
                            register_len: 0,
                        },
                        instructions: [
                            StaticCall {
                                ty: Single {
                                    assem: "Test",
                                    ty: "Test.StaticTest",
                                },
                                method: Single(
                                    "PrintStaticsAndGenericType()",
                                ),
                                args: [],
                                ret_at: 1,
                            },
                            NewObject {
                                ty: WithGeneric {
                                    assem: "Test",
                                    ty: "Test.GenericTest`2",
                                    type_vars: {
                                        "@T": Single {
                                            assem: "!",
                                            ty: "System.Boolean",
                                        },
                                        "@U": WithGeneric {
                                            assem: "!",
                                            ty: "System.Array`1",
                                            type_vars: {
                                                "@T": Single {
                                                    assem: "!",
                                                    ty: "System.Boolean",
                                                },
                                            },
                                        },
                                    },
                                },
                                ctor_name: ".ctor()",
                                args: [],
                                register_addr: 2,
                            },
                            Load_u64 {
                                register_addr: 1,
                                val: 0,
                            },
                            InstanceCall {
                                val: 2,
                                method: Single(
                                    "GenericMethod`1[@Z:[!]System.UInt64]()",
                                ),
                                args: [],
                                ret_at: 1,
                            },
                            ReturnVal {
                                register_addr: 1,
                            },
                        ],
                        ret_type: Single {
                            assem: "!",
                            ty: "System.Void",
                        },
                        args: [
                            WithGeneric {
                                assem: "!",
                                ty: "System.Array`1",
                                type_vars: {
                                    "@T": Single {
                                        assem: "!",
                                        ty: "System.String",
                                    },
                                },
                            },
                        ],
                        type_vars: {},
                    },
                    "PrintStaticsAndGenericType()": Method {
                        name: "PrintStaticsAndGenericType()",
                        attr: MethodAttr {
                            vis: Public,
                            impl_flags: BitFlags<MethodImplementationFlags> {
                                bits: 0b1,
                                flags: Static,
                            },
                            register_len: 0,
                        },
                        instructions: [
                            LoadStatic {
                                register_addr: 0,
                                ty: Single {
                                    assem: "Test",
                                    ty: "Test.StaticTest",
                                },
                                name: "__test",
                            },
                            StaticCall {
                                ty: Single {
                                    assem: "!",
                                    ty: "System.Console",
                                },
                                method: Single(
                                    "WriteLine([!]System.String)",
                                ),
                                args: [
                                    0,
                                ],
                                ret_at: 1,
                            },
                        ],
                        ret_type: Single {
                            assem: "!",
                            ty: "System.Void",
                        },
                        args: [],
                        type_vars: {},
                    },
                },
                fields: {
                    "__test": Field {
                        name: "__test",
                        attr: FieldAttr {
                            vis: Private,
                            impl_flags: BitFlags<FieldImplementationFlags> {
                                bits: 0b1,
                                flags: Static,
                            },
                        },
                        ty: Single {
                            assem: "!",
                            ty: "System.String",
                        },
                    },
                },
            },
        ),
        "Test.Test": Class(
            ClassDef {
                parent: Some(
                    Single {
                        assem: "!",
                        ty: "System.Object",
                    },
                ),
                type_vars: {},
                attr: TypeAttr {
                    vis: Public,
                    specific: Class(
                        BitFlags<ClassImplementationFlags> {
                            bits: 0b0,
                        },
                    ),
                },
                name: "Test.Test",
                methods: {},
                fields: {
                    "__test": Field {
                        name: "__test",
                        attr: FieldAttr {
                            vis: Private,
                            impl_flags: BitFlags<FieldImplementationFlags> {
                                bits: 0b0,
                            },
                        },
                        ty: Single {
                            assem: "!",
                            ty: "System.String",
                        },
                    },
                },
            },
        ),
    },
}